{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Desarrollo Web\\\\SistemaDeGestionReact-main\\\\src\\\\Components\\\\Context\\\\ContextProvider.tsx\";\nimport React, { createContext } from \"react\";\nimport admin from \"./default\";\nimport openSesion from \"./OpenSesion\";\nimport closeSesion from \"./CloseSesion\";\nimport ValidateSesion from \"./ValidateSesion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext({});\nexport function ContextProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const verify = data => {\n    const {\n      username,\n      password\n    } = admin;\n    const {\n      username: usernameComp,\n      password: passwordComp\n    } = data;\n    console.log(\"data: \", data, \" admin: \", admin);\n    const correct = username === usernameComp && password === passwordComp ? true : false;\n    console.log(correct, \"es correcto?\");\n    return correct;\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      verify,\n      openSesion,\n      closeSesion,\n      ValidateSesion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","admin","openSesion","closeSesion","ValidateSesion","DataContext","ContextProvider","children","verify","data","username","password","usernameComp","passwordComp","console","log","correct"],"sources":["D:/Documents/Desarrollo Web/SistemaDeGestionReact-main/src/Components/Context/ContextProvider.tsx"],"sourcesContent":["import React, {createContext} from \"react\"\nimport admin from \"./default\"\nimport UserI from \"../../../Interfaces/User\"\nimport openSesion from \"./OpenSesion\"\nimport closeSesion from \"./CloseSesion\"\nimport ValidateSesion from \"./ValidateSesion\"\n\nexport const DataContext = createContext<any>({})\n\nexport function ContextProvider({children}: any) {\n\tconst verify = (data: UserI): boolean => {\n\t\tconst {username, password} = admin\n\t\tconst {username: usernameComp, password: passwordComp} = data\n\t\tconsole.log(\"data: \", data, \" admin: \", admin)\n\t\tconst correct =\n\t\t\tusername === usernameComp && password === passwordComp ? true : false\n\t\tconsole.log(correct, \"es correcto?\")\n\t\treturn correct\n\t}\n\n\treturn (\n\t\t<DataContext.Provider\n\t\t\tvalue={{verify, openSesion, closeSesion, ValidateSesion}}\n\t\t>\n\t\t\t{children}\n\t\t</DataContext.Provider>\n\t)\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,aAAa,QAAO,OAAO;AAC1C,OAAOC,KAAK,MAAM,WAAW;AAE7B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAA;AAE7C,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAM,CAAC,CAAC,CAAC;AAEjD,OAAO,SAASM,eAAe,OAAkB;EAAA,IAAjB;IAACC;EAAa,CAAC;EAC9C,MAAMC,MAAM,GAAIC,IAAW,IAAc;IACxC,MAAM;MAACC,QAAQ;MAAEC;IAAQ,CAAC,GAAGV,KAAK;IAClC,MAAM;MAACS,QAAQ,EAAEE,YAAY;MAAED,QAAQ,EAAEE;IAAY,CAAC,GAAGJ,IAAI;IAC7DK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,IAAI,EAAE,UAAU,EAAER,KAAK,CAAC;IAC9C,MAAMe,OAAO,GACZN,QAAQ,KAAKE,YAAY,IAAID,QAAQ,KAAKE,YAAY,GAAG,IAAI,GAAG,KAAK;IACtEC,OAAO,CAACC,GAAG,CAACC,OAAO,EAAE,cAAc,CAAC;IACpC,OAAOA,OAAO;EACf,CAAC;EAED,oBACC,QAAC,WAAW,CAAC,QAAQ;IACpB,KAAK,EAAE;MAACR,MAAM;MAAEN,UAAU;MAAEC,WAAW;MAAEC;IAAc,CAAE;IAAA,UAExDG;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAEzB;AAAC,KAlBeD,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}